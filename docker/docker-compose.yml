services:
  nats:
    image: nats:latest
    ports:
      - "127.0.0.1:4222:4222"
      - "127.0.0.1:8222:8222"
      - "127.0.0.1:6222:6222"
    # volumes:
    #   - nats-data:/data
    environment:
      - NATS_SERVER_NAME=nats-server
      - NATS_CLUSTER_NAME=trading-cluster
    networks:
      - trading-network
    depends_on:
      - influxdb

  prometheus-nats-exporter:
    image: natsio/prometheus-nats-exporter:latest
    networks:
      - trading-network
    ports:
      - "127.0.0.1:7777:7777"
    command:
      - -varz
      - -channelz
      - -serverz
      - "http://nats:8222"
    depends_on:
      - nats
      - influxdb
  
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "127.0.0.1:9090:9090"
    build:
      context: .
      dockerfile: Dockerfile.prometheus
    command:
      - --web.listen-address=0.0.0.0:9090
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    networks:
      - trading-network
    depends_on:
      - prometheus-nats-exporter
  
  
  grafana:
    build:
      context: .
      dockerfile: Dockerfile.grafana
    ports:
      - 127.0.0.1:3000:3000
    networks:
      - trading-network
    # volumes:
    #   - ./provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
      - nats
      - prometheus-nats-exporter


  influxdb:
    image: influxdb:2.6
    container_name: influxdb
    networks:
      - trading-network
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=trading-org
      - DOCKER_INFLUXDB_INIT_BUCKET=trading_bucket
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=token
    # volumes:
    #   - influxdb-data:/var/lib/influxdb2
  

# volumes:
#   nats-data:
#     driver: local
#   influxdb-data:
#     driver: local

networks:
  trading-network:
    driver: bridge